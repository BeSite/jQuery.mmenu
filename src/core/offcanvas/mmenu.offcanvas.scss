@import '../../mixins', '../../includes', '../../variables';

:root {
    --mm-size: #{$mm_menuSize};
    --mm-min-size: #{$mm_menuMinSize};
    --mm-max-size: #{$mm_menuMaxSize};
}

//	Page node
.mm-page {
    box-sizing: border-box;
    min-height: 100vh;
    background: inherit;    
}

//  All sliding out nodes
.mm-slideout {
    position: relative;
    z-index: 1;
    transition: transform $mm_transitionDuration $mm_transitionFunction;

    .mm-wrapper--opened & {
        transform: translate3d(
            clamp(var(--mm-min-size), var(--mm-size), var(--mm-max-size)),
            0,
            0
        );
    }
}

//	Wrapper
.mm-wrapper--opened {
    overflow: hidden;

    body {
        overflow: hidden;
    }
}

//	Menu
.mm-menu--offcanvas {
    position: fixed;
    right: auto;
    z-index: 0;
    width: clamp(var(--mm-min-size), var(--mm-size), var(--mm-max-size));
    transition: visibility 0s linear $mm_transitionDuration;

    &.mm-menu--opened {
        transition-delay: 0s;
    }

    &:not(.mm-menu--opened) {
        visibility: hidden;
        pointer-events: none;

        // Visible panels undo the hidden menu.
        .mm-panel {
            visibility: hidden;
            transition: visibility 0s linear, $mm_transitionDuration;
        }
    }
}

.mm-wrapper__blocker {
    visibility: hidden;
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 100%;
    z-index: 2;
    overflow: hidden;

    .mm-wrapper--opened & {
        visibility: visible;
        left: 0;
        transition-delay: 0;
    }

    .mm-tabguard--fill {
        opacity: 0;
        background: rgba(#000, 0.3);
        transition: opacity $mm_transitionDuration $mm_transitionFunction $mm_transitionDuration;

        .mm-menu--opened ~ & {
            opacity: 0.5;
        }

        &:focus {
            opacity: 1;
        }
    }
}

@import 'offcanvas.rtl';
